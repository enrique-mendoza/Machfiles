# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Import additional configuration files
#
# Imports are loaded in order, skipping all missing files, with the importing
# file being loaded last. If a field is already present in a previous import, it
# will be replaced.
#
# All imports must either be absolute paths starting with `/`, or paths relative
# to the user's home directory starting with `~/`.
import:
  # - ~/.config/alacritty/colorscheme/catppuccin.yml
  # - ~/.config/alacritty/colorscheme/gruvbox_material.yml
  # - ~/.config/alacritty/colorscheme/material_ocean.yml
  - ~/.config/alacritty/colorscheme/one_darker.yml

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: alacritty

window:
  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 2
    y: 2

  # Allow terminal applications to change Alacritty's window title.
  dynamic_title: true

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Scrolling distance multiplier.
  # multiplier: 10

# Font configuration
font:
  normal:
    # Normal (roman) font face
    # family: JetBrainsMono NF
    family: Comic Code
    # The `style` can be specified to pick a specific face.
    style: Regular

  # Bold font face
  bold:
    # family: JetBrainsMono NF
    family: Comic Code
    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    # family: JetBrainsMono NF
    family: Comic Code
    # The `style` can be specified to pick a specific face.
    style: Italic

  # Point size
  size: 13.0

  # ligatures: true

  # Offset is the extra space around each character. `offset.y` can be thought
  # of as modifying the line spacing, and `offset.x` as modifying the letter
  # spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the
  # right, increasing `y` moves the glyph upward.
  glyph_offset:
    x: 0
    y: 0

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

selection:
  # This string contains all characters that are used as separators for
  # "semantic words" in Alacritty.
  semantic_escape_chars: ',│`|:"'' ()[]{}<>'

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

cursor:
  # Cursor style
  style:
    # Values for `shape`:
    #   - ▇ Block
    #   - _ Underline
    #   - | Beam
    # shape:
    #
    # Values for `blinking`:
    #   - Never: Prevent the cursor from ever blinking
    #   - Off: Disable blinking by default
    #   - On: Enable blinking by default
    #   - Always: Force the cursor to always blink
    blinking: Never

# Live config reload (changes require restart)
live_config_reload: true

mouse:
  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# in the order they were defined in.
key_bindings:
  - { key: V, mods: Control|Shift, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  - { key: Key0, mods: Control, action: ResetFontSize }
  - { key: Equals, mods: Control, action: IncreaseFontSize }
  - { key: Minus, mods: Control, action: DecreaseFontSize }
  # - { key: Add, mods: Control, action: IncreaseFontSize }
  # - { key: Subtract, mods: Control, action: DecreaseFontSize }
  # - { key: N, mods: Control, action: SpawnNewInstance }
